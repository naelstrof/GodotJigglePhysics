[gd_resource type="VisualShader" load_steps=110 format=3 uid="uid://b6hjqmlici6mw"]

[ext_resource type="Script" path="res://com.naelstrof.shaders/Matcap.cs" id="1_gpcqn"]
[ext_resource type="Script" path="res://com.naelstrof.shaders/SimpleNoise.cs" id="3_hbetw"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_m207y"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 1

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_cjc0q"]
varying_name = "world_position"
varying_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_riidr"]
input_name = "camera_position_world"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_tpp5d"]
operator = 1

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_elq73"]
function = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_x7cr5"]
parameter_name = "NormalMap"
texture_type = 2
color_default = 1
texture_repeat = 2

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_8fjyf"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_gwvhc"]
default_input_values = [0, 0.0, 1, 0.5, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ykds3"]
default_input_values = [0, 0.45, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_b2mwy"]
default_input_values = [0, 0.0, 1, 0.45, 2, 0.5]

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_u63ug"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_47jb3"]
default_input_values = [0, 0.0, 1, 6.283]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_3i8mg"]
function = 1

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_squk8"]
function = 19

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ov7re"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_0hm85"]
parameter_name = "IrisSize"
hint = 1
default_value_enabled = true
default_value = 0.4

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6g2ow"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_rh5ef"]
expanded_output_ports = [0]
parameter_name = "IrisRing"
default_value_enabled = true
default_value = Color(0.20181, 0.228675, 0.271655, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_nj5l5"]
parameter_name = "Scelera"
default_value_enabled = true
default_value = Color(0.2, 0.227451, 0.270588, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_wjxoo"]
parameter_name = "Blood"
default_value_enabled = true
default_value = Color(0.2, 0.227451, 0.270588, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1d2lq"]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ny7uk"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_pscjn"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_2fi8m"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_71muk"]
initialized = true
script = ExtResource("1_gpcqn")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_1qtol"]
parameter_name = "IrisBlend"
hint = 1
default_value_enabled = true
default_value = 0.55

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_hls3y"]
parameter_name = "StylizedReflection"
texture_type = 1
color_default = 1
texture_repeat = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_05fym"]
expanded_output_ports = [0]
source = 5
texture_type = 2

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_1hgpd"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xm5xr"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_emrpd"]
input_name = "tangent"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_qipkb"]
input_name = "binormal"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5d88u"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_oqqfw"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rvvsx"]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7wmn4"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ngaby"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4y7fj"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_fsn8h"]
function = 18

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_wfhu3"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1.0]

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_yu2wr"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(2, 2, 2), 2, Vector3(-1, -1, -1)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_beyve"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_735tx"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8n3p4"]
input_name = "model_matrix"

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_rqm3k"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 18

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_oustt"]
size = Vector2(1224.39, 1776.58)
expression = "int minSamples = 8;
int maxSamples = 16;
vec3 result = vec3(0,0,0);
int stepIndex = 0;
int numSteps = int(mix(float(maxSamples), float(minSamples), dot(normalWorld, viewWorld)));
float layerHeight = 1.0 / float(numSteps);
vec2 plane = parallax * ( viewDirTan.xy / viewDirTan.z );
uvs += refPlane * plane;
vec2 deltaTex = -plane * layerHeight;
vec2 prevTexOffset = vec2(0,0);
float prevRayZ = 1.0f;
float prevHeight = 0.0f;
vec2 currTexOffset = deltaTex;
float currRayZ = 1.0f - layerHeight;
float currHeight = 0.0f;
float intersection = 0.0f;
vec2 finalTexOffset = vec2(0,0);
vec2 dialatedUV = vec2(0,0);
float dialatedCenterDist = 0.0f;
while ( stepIndex < numSteps + 1 ) {
	dialatedUV = uvs + currTexOffset - vec2(0.5,0.5);
	dialatedCenterDist = length(dialatedUV);
	dialatedCenterDist = max(0, currentDialation + dialatedCenterDist * (irisSize - currentDialation) / irisSize);
	dialatedUV = normalize(dialatedUV) * dialatedCenterDist;
	dialatedUV +=  vec2(0.5,0.5);
	currHeight = textureLod(heightMap, dialatedUV,0).r;
	if ( currHeight > currRayZ ) {
		stepIndex = numSteps + 1;
	} else {
		stepIndex++;
		prevTexOffset = currTexOffset;
		prevRayZ = currRayZ;
		prevHeight = currHeight;
		currTexOffset += deltaTex;
		currRayZ -= layerHeight;
	}
}
int sectionSteps = numSteps/2;
int sectionIndex = 0;
float newZ = 0.0f;
float newHeight = 0.0f;
while ( sectionIndex < sectionSteps ) {
	intersection = ( prevHeight - prevRayZ ) / ( prevHeight - currHeight + currRayZ - prevRayZ );
	finalTexOffset = prevTexOffset + intersection * deltaTex;
	dialatedUV = uvs + finalTexOffset - vec2(0.5,0.5);
	dialatedCenterDist = length(dialatedUV);
	dialatedCenterDist = max(0, currentDialation + dialatedCenterDist * (irisSize - currentDialation) / irisSize);
	dialatedUV = normalize(dialatedUV) * dialatedCenterDist;
	dialatedUV +=  vec2(0.5,0.5);
	newZ = prevRayZ - intersection * layerHeight;
	newHeight = textureLod( heightMap, dialatedUV,0).r;
	if ( newHeight > newZ ) {
		currTexOffset = finalTexOffset;
		currHeight = newHeight;
		currRayZ = newZ;
		deltaTex = intersection * deltaTex;
		layerHeight = intersection * layerHeight;
	} else {
		prevTexOffset = finalTexOffset;
		prevHeight = newHeight;
		prevRayZ = newZ;
		deltaTex = ( 1.0 - intersection ) * deltaTex;
		layerHeight = ( 1.0 - intersection ) * layerHeight;
	}
	sectionIndex++;
}
Out = dialatedUV;"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_pmfbo"]
parameter_name = "HeightMap"
texture_repeat = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_s5cij"]

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_jfqyh"]
varying_name = "world_normal"
varying_type = 4

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_gbep0"]
varying_name = "world_binormal"
varying_type = 4

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_3esj7"]
varying_name = "world_tangent"
varying_type = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_s555r"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_qxgvn"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nusru"]
default_input_values = [0, 1.0, 1, 0.0]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_ejw71"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_51unh"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_outl0"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_s6bkl"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_sc0xl"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qm24k"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_3ppnu"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5d3bx"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_isfl8"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_lx7jv"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_q46qu"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(-0.5, -0.5)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_sf0jl"]
parameter_name = "Depth"
hint = 1
default_value_enabled = true
default_value = 0.36

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5phfw"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_sytfn"]
constant = 0.5

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_j6yuc"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_8fkmn"]
parameter_name = "IrisBaseColor"
texture_type = 1
color_default = 1
texture_repeat = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_p3oap"]
parameter_name = "EmissionPower"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xgvvw"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_5hmix"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_omr4j"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ltslt"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.5]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_caa42"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2rlun"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_bq5uq"]
constant = -0.5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6myhn"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_i2tfa"]
constant = 0.5

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_ywnyf"]
default_input_values = [1, -1.0, 2, 1.0, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_6vj5v"]
initialized = true
script = ExtResource("3_hbetw")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wsvsd"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_spes8"]
parameter_name = "PupilDilationFrequency"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wvpk4"]
default_input_values = [0, 0.3, 1, 0.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_gqp73"]
default_input_values = [0, 0.3, 1, 0.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kl3mg"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.5, 0.5)]
op_type = 0

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_6ctde"]

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_tsy47"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.5, 0.5)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0p0dg"]
default_input_values = [0, 0.0, 1, 0.02]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_dwqio"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_sbxma"]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_4etjs"]
varying_name = "world_tangent"
varying_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1pesd"]
input_name = "binormal"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_r3ao0"]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_5o383"]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_uvajf"]
varying_name = "world_position"
varying_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kklpg"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_ovps8"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6o4pn"]
input_name = "model_matrix"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7vyh4"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_4b2fg"]
varying_name = "world_normal"
varying_type = 4

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_ekiop"]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_k4thq"]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_ocsti"]
varying_name = "world_binormal"
varying_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xjkce"]
input_name = "tangent"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_uv32g"]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;


// Varyings
varying vec3 world_normal;
varying vec3 world_binormal;
varying vec3 world_tangent;
varying vec3 world_position;

uniform vec4 Scelera : source_color = vec4(0.200000, 0.227451, 0.270588, 1.000000);
uniform vec4 Blood : source_color = vec4(0.200000, 0.227451, 0.270588, 1.000000);
uniform float IrisBlend : hint_range(0, 1) = 0.55000001192093;
uniform float IrisSize : hint_range(0, 1) = 0.40000000596046;
uniform vec4 IrisRing : source_color = vec4(0.201810, 0.228675, 0.271655, 1.000000);
uniform sampler2D HeightMap : repeat_disable;
uniform float Depth : hint_range(0, 1) = 0.36000001430511;
uniform sampler2D IrisBaseColor : source_color, hint_default_black, repeat_disable;
uniform float EmissionPower : hint_range(0, 1) = 0.5;



void vertex() {
// Input:2
	mat4 n_out2p0 = MODEL_MATRIX;


// Input:3
	vec3 n_out3p0 = NORMAL;


// TransformVectorMult:5
	vec3 n_out5p0 = (n_out2p0 * vec4(n_out3p0, 0.0)).xyz;


// VectorFunc:6
	vec3 n_out6p0 = normalize(n_out5p0);


// VaryingSetter:4
	world_normal = n_out6p0;


// Input:12
	vec3 n_out12p0 = BINORMAL;


// TransformVectorMult:13
	vec3 n_out13p0 = (n_out2p0 * vec4(n_out12p0, 0.0)).xyz;


// VectorFunc:14
	vec3 n_out14p0 = normalize(n_out13p0);


// VaryingSetter:7
	world_binormal = n_out14p0;


// Input:8
	vec3 n_out8p0 = TANGENT;


// TransformVectorMult:9
	vec3 n_out9p0 = (n_out2p0 * vec4(n_out8p0, 0.0)).xyz;


// VectorFunc:10
	vec3 n_out10p0 = normalize(n_out9p0);


// VaryingSetter:11
	world_tangent = n_out10p0;


// Input:17
	vec3 n_out17p0 = VERTEX;


// TransformVectorMult:18
	vec3 n_out18p0 = (n_out2p0 * vec4(n_out17p0, 1.0)).xyz;


// VaryingSetter:15
	world_position = n_out18p0;


}

void fragment() {
// ColorParameter:22
	vec4 n_out22p0 = Scelera;


// ColorParameter:23
	vec4 n_out23p0 = Blood;


// Input:4
	vec2 n_out4p0 = UV;


// VectorFunc:5
	vec2 n_out5p0 = fract(n_out4p0);


// VectorOp:7
	vec2 n_in7p1 = vec2(-0.50000, -0.50000);
	vec2 n_out7p0 = n_out5p0 + n_in7p1;


// VectorLen:11
	float n_out11p0 = length(n_out7p0);


// SmoothStep:12
	float n_in12p0 = 0.00000;
	float n_in12p1 = 0.50000;
	float n_out12p0 = smoothstep(n_in12p0, n_in12p1, n_out11p0);


// Mix:26
	vec4 n_out26p0 = mix(n_out22p0, n_out23p0, vec4(n_out12p0));


// FloatParameter:3
	float n_out3p0 = IrisBlend;


// FloatOp:13
	float n_in13p0 = 0.45000;
	float n_out13p0 = n_in13p0 - n_out3p0;


// FloatParameter:2
	float n_out2p0 = IrisSize;


// FloatOp:6
	float n_in6p0 = 1.00000;
	float n_out6p0 = n_in6p0 / n_out2p0;


// VectorOp:8
	vec2 n_out8p0 = n_out7p0 * vec2(n_out6p0);


// VectorLen:15
	float n_out15p0 = length(n_out8p0);


// SmoothStep:14
	float n_in14p1 = 0.45000;
	float n_out14p0 = smoothstep(n_out13p0, n_in14p1, n_out15p0);


// Mix:27
	vec4 n_in27p0 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_out27p0 = mix(n_in27p0, n_out26p0, vec4(n_out14p0));


// ColorParameter:21
	vec4 n_out21p0 = IrisRing;
	float n_out21p4 = n_out21p0.a;


// FloatOp:16
	float n_in16p1 = 6.28300;
	float n_out16p0 = n_out14p0 * n_in16p1;


// FloatFunc:17
	float n_out17p0 = cos(n_out16p0);


// FloatFunc:18
	float n_out18p0 = -(n_out17p0);


// FloatOp:19
	float n_in19p1 = 1.00000;
	float n_out19p0 = n_out18p0 + n_in19p1;


// FloatOp:20
	float n_in20p1 = 0.50000;
	float n_out20p0 = n_out19p0 * n_in20p1;


// FloatOp:24
	float n_out24p0 = n_out20p0 * n_out21p4;


// Mix:25
	vec4 n_out25p0 = mix(n_out27p0, n_out21p0, vec4(n_out24p0));


// VectorOp:9
	vec2 n_in9p1 = vec2(0.50000, 0.50000);
	vec2 n_out9p0 = n_out8p0 + n_in9p1;


// VectorFunc:10
	vec2 n_out10p0 = max(min(n_out9p0, vec2(1.0)), vec2(0.0));


// Input:104
	vec3 n_out104p0 = CAMERA_POSITION_WORLD;


// VaryingGetter:103
	vec3 n_out103p0 = world_position;


// VectorOp:105
	vec3 n_out105p0 = n_out104p0 - n_out103p0;


// VectorFunc:97
	vec3 n_out97p0 = normalize(n_out105p0);


// VaryingGetter:57
	vec3 n_out57p0 = world_tangent;


// VectorDecompose:60
	float n_out60p0 = n_out57p0.x;
	float n_out60p1 = n_out57p0.y;
	float n_out60p2 = n_out57p0.z;


// VaryingGetter:56
	vec3 n_out56p0 = world_binormal;


// VectorFunc:106
	vec3 n_out106p0 = -(n_out56p0);


// VectorDecompose:59
	float n_out59p0 = n_out106p0.x;
	float n_out59p1 = n_out106p0.y;
	float n_out59p2 = n_out106p0.z;


// VaryingGetter:55
	vec3 n_out55p0 = world_normal;


// VectorDecompose:58
	float n_out58p0 = n_out55p0.x;
	float n_out58p1 = n_out55p0.y;
	float n_out58p2 = n_out55p0.z;


// VectorCompose:61
	vec3 n_out61p0 = vec3(n_out60p0, n_out59p0, n_out58p0);


// VectorDecompose:53
	float n_out53p0 = n_out97p0.x;
	float n_out53p1 = n_out97p0.y;
	float n_out53p2 = n_out97p0.z;


// VectorOp:64
	vec3 n_out64p0 = n_out61p0 * vec3(n_out53p0);


// VectorCompose:62
	vec3 n_out62p0 = vec3(n_out60p1, n_out59p1, n_out58p1);


// VectorOp:65
	vec3 n_out65p0 = n_out62p0 * vec3(n_out53p1);


// VectorOp:67
	vec3 n_out67p0 = n_out64p0 + n_out65p0;


// VectorCompose:63
	vec3 n_out63p0 = vec3(n_out60p2, n_out59p2, n_out58p2);


// VectorOp:66
	vec3 n_out66p0 = n_out63p0 * vec3(n_out53p2);


// VectorOp:68
	vec3 n_out68p0 = n_out67p0 + n_out66p0;


// VectorFunc:69
	vec3 n_out69p0 = normalize(n_out68p0);


// FloatParameter:70
	float n_out70p0 = Depth;


// FloatConstant:71
	float n_out71p0 = 0.000000;


// FloatConstant:81
	float n_out81p0 = -0.500000;


// FloatConstant:83
	float n_out83p0 = 0.500000;


	float n_out84p0;
// Remap:84
	float n_in84p1 = -1.00000;
	float n_in84p2 = 1.00000;
	float n_in84p3 = 0.00000;
	float n_in84p4 = 1.00000;
	{
		float __input_range = n_in84p2 - n_in84p1;
		float __output_range = n_in84p4 - n_in84p3;
		n_out84p0 = n_in84p3 + __output_range * (( - n_in84p1) / __input_range);
	}


// FloatOp:82
	float n_out82p0 = n_out83p0 * n_out84p0;


// FloatOp:80
	float n_out80p0 = n_out81p0 * n_out82p0;


// FloatOp:93
	float n_in93p1 = 0.02000;
	float n_out93p0 = n_out83p0 + n_in93p1;


// Distance:92
	vec2 n_in92p1 = vec2(0.50000, 0.50000);
	float n_out92p0 = distance(n_out10p0, n_in92p1);


// SmoothStep:91
	float n_out91p0 = smoothstep(n_out83p0, n_out93p0, n_out92p0);


// Mix:79
	float n_in79p1 = 0.00000;
	float n_out79p0 = mix(n_out80p0, n_in79p1, n_out91p0);


// FloatConstant:72
	float n_out72p0 = 0.500000;


	vec2 n_out50p0;
// Expression:50
	n_out50p0 = vec2(0.0, 0.0);
	{
		int minSamples = 8;
		int maxSamples = 16;
		vec3 result = vec3(0,0,0);
		int stepIndex = 0;
		int numSteps = int(mix(float(maxSamples), float(minSamples), dot(n_out55p0, n_out97p0)));
		float layerHeight = 1.0 / float(numSteps);
		vec2 plane = n_out70p0 * ( n_out69p0.xy / n_out69p0.z );
		n_out10p0 += n_out71p0 * plane;
		vec2 deltaTex = -plane * layerHeight;
		vec2 prevTexOffset = vec2(0,0);
		float prevRayZ = 1.0f;
		float prevHeight = 0.0f;
		vec2 currTexOffset = deltaTex;
		float currRayZ = 1.0f - layerHeight;
		float currHeight = 0.0f;
		float intersection = 0.0f;
		vec2 finalTexOffset = vec2(0,0);
		vec2 dialatedUV = vec2(0,0);
		float dialatedCenterDist = 0.0f;
		while ( stepIndex < numSteps + 1 ) {
			dialatedUV = n_out10p0 + currTexOffset - vec2(0.5,0.5);
			dialatedCenterDist = length(dialatedUV);
			dialatedCenterDist = max(0, n_out79p0 + dialatedCenterDist * (n_out72p0 - n_out79p0) / n_out72p0);
			dialatedUV = normalize(dialatedUV) * dialatedCenterDist;
			dialatedUV +=  vec2(0.5,0.5);
			currHeight = textureLod(HeightMap, dialatedUV,0).r;
			if ( currHeight > currRayZ ) {
				stepIndex = numSteps + 1;
			} else {
				stepIndex++;
				prevTexOffset = currTexOffset;
				prevRayZ = currRayZ;
				prevHeight = currHeight;
				currTexOffset += deltaTex;
				currRayZ -= layerHeight;
			}
		}
		int sectionSteps = numSteps/2;
		int sectionIndex = 0;
		float newZ = 0.0f;
		float newHeight = 0.0f;
		while ( sectionIndex < sectionSteps ) {
			intersection = ( prevHeight - prevRayZ ) / ( prevHeight - currHeight + currRayZ - prevRayZ );
			finalTexOffset = prevTexOffset + intersection * deltaTex;
			dialatedUV = n_out10p0 + finalTexOffset - vec2(0.5,0.5);
			dialatedCenterDist = length(dialatedUV);
			dialatedCenterDist = max(0, n_out79p0 + dialatedCenterDist * (n_out72p0 - n_out79p0) / n_out72p0);
			dialatedUV = normalize(dialatedUV) * dialatedCenterDist;
			dialatedUV +=  vec2(0.5,0.5);
			newZ = prevRayZ - intersection * layerHeight;
			newHeight = textureLod( HeightMap, dialatedUV,0).r;
			if ( newHeight > newZ ) {
				currTexOffset = finalTexOffset;
				currHeight = newHeight;
				currRayZ = newZ;
				deltaTex = intersection * deltaTex;
				layerHeight = intersection * layerHeight;
			} else {
				prevTexOffset = finalTexOffset;
				prevHeight = newHeight;
				prevRayZ = newZ;
				deltaTex = ( 1.0 - intersection ) * deltaTex;
				layerHeight = ( 1.0 - intersection ) * layerHeight;
			}
			sectionIndex++;
		}
		n_out50p0 = dialatedUV;
	}


	vec4 n_out73p0;
// Texture2D:73
	n_out73p0 = texture(IrisBaseColor, n_out50p0);


// FloatParameter:75
	float n_out75p0 = EmissionPower;


// VectorOp:76
	vec4 n_out76p0 = n_out73p0 * vec4(n_out75p0);


// Mix:77
	vec4 n_in77p1 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_out77p0 = mix(n_out76p0, n_in77p1, vec4(n_out14p0));


// VectorOp:78
	vec4 n_in78p0 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_out78p0 = n_in78p0 + n_out77p0;


// Output:0
	ALBEDO = vec3(n_out25p0.xyz);
	EMISSION = vec3(n_out78p0.xyz);


}
"
varyings/world_normal = "0,4"
varyings/world_binormal = "0,4"
varyings/world_tangent = "0,4"
varyings/world_position = "0,4"
nodes/vertex/0/position = Vector2(380, 0)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_6o4pn")
nodes/vertex/2/position = Vector2(-560, 540)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_7vyh4")
nodes/vertex/3/position = Vector2(-540, 720)
nodes/vertex/4/node = SubResource("VisualShaderNodeVaryingSetter_4b2fg")
nodes/vertex/4/position = Vector2(380, 640)
nodes/vertex/5/node = SubResource("VisualShaderNodeTransformVecMult_ekiop")
nodes/vertex/5/position = Vector2(-120, 620)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorFunc_k4thq")
nodes/vertex/6/position = Vector2(120, 600)
nodes/vertex/7/node = SubResource("VisualShaderNodeVaryingSetter_ocsti")
nodes/vertex/7/position = Vector2(380, 1080)
nodes/vertex/8/node = SubResource("VisualShaderNodeInput_xjkce")
nodes/vertex/8/position = Vector2(-660, 940)
nodes/vertex/9/node = SubResource("VisualShaderNodeTransformVecMult_uv32g")
nodes/vertex/9/position = Vector2(-160, 880)
nodes/vertex/10/node = SubResource("VisualShaderNodeVectorFunc_sbxma")
nodes/vertex/10/position = Vector2(80, 840)
nodes/vertex/11/node = SubResource("VisualShaderNodeVaryingSetter_4etjs")
nodes/vertex/11/position = Vector2(400, 840)
nodes/vertex/12/node = SubResource("VisualShaderNodeInput_1pesd")
nodes/vertex/12/position = Vector2(-580, 1140)
nodes/vertex/13/node = SubResource("VisualShaderNodeTransformVecMult_r3ao0")
nodes/vertex/13/position = Vector2(-160, 1080)
nodes/vertex/14/node = SubResource("VisualShaderNodeVectorFunc_5o383")
nodes/vertex/14/position = Vector2(100, 1060)
nodes/vertex/15/node = SubResource("VisualShaderNodeVaryingSetter_uvajf")
nodes/vertex/15/position = Vector2(360, 400)
nodes/vertex/17/node = SubResource("VisualShaderNodeInput_kklpg")
nodes/vertex/17/position = Vector2(-800, 420)
nodes/vertex/18/node = SubResource("VisualShaderNodeTransformVecMult_ovps8")
nodes/vertex/18/position = Vector2(-140, 360)
nodes/vertex/connections = PackedInt32Array(2, 0, 5, 0, 3, 0, 5, 1, 5, 0, 6, 0, 6, 0, 4, 0, 8, 0, 9, 1, 9, 0, 10, 0, 2, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 1, 13, 0, 14, 0, 2, 0, 13, 0, 14, 0, 7, 0, 18, 0, 15, 0, 17, 0, 18, 1, 2, 0, 18, 0)
nodes/fragment/0/position = Vector2(3920, -140)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatParameter_0hm85")
nodes/fragment/2/position = Vector2(-1720, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_1qtol")
nodes/fragment/3/position = Vector2(-1720, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_rvvsx")
nodes/fragment/4/position = Vector2(-1720, -40)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorFunc_rqm3k")
nodes/fragment/5/position = Vector2(-1320, -100)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_nusru")
nodes/fragment/6/position = Vector2(-1300, 140)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_q46qu")
nodes/fragment/7/position = Vector2(-1140, -100)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_caa42")
nodes/fragment/8/position = Vector2(-880, -100)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_kl3mg")
nodes/fragment/9/position = Vector2(-660, -100)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorFunc_m207y")
nodes/fragment/10/position = Vector2(-480, -100)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorLen_8fjyf")
nodes/fragment/11/position = Vector2(-980, 280)
nodes/fragment/12/node = SubResource("VisualShaderNodeSmoothStep_gwvhc")
nodes/fragment/12/position = Vector2(-600, 220)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatOp_ykds3")
nodes/fragment/13/position = Vector2(-1200, 460)
nodes/fragment/14/node = SubResource("VisualShaderNodeSmoothStep_b2mwy")
nodes/fragment/14/position = Vector2(-540, 520)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorLen_u63ug")
nodes/fragment/15/position = Vector2(-760, 380)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_47jb3")
nodes/fragment/16/position = Vector2(-200, 560)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatFunc_3i8mg")
nodes/fragment/17/position = Vector2(-60, 580)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatFunc_squk8")
nodes/fragment/18/position = Vector2(120, 580)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_ov7re")
nodes/fragment/19/position = Vector2(300, 560)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_6g2ow")
nodes/fragment/20/position = Vector2(460, 560)
nodes/fragment/21/node = SubResource("VisualShaderNodeColorParameter_rh5ef")
nodes/fragment/21/position = Vector2(-40, -860)
nodes/fragment/22/node = SubResource("VisualShaderNodeColorParameter_nj5l5")
nodes/fragment/22/position = Vector2(-340, -540)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorParameter_wjxoo")
nodes/fragment/23/position = Vector2(-320, -320)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatOp_1d2lq")
nodes/fragment/24/position = Vector2(420, -580)
nodes/fragment/25/node = SubResource("VisualShaderNodeMix_ny7uk")
nodes/fragment/25/position = Vector2(800, -680)
nodes/fragment/26/node = SubResource("VisualShaderNodeMix_pscjn")
nodes/fragment/26/position = Vector2(320, -300)
nodes/fragment/27/node = SubResource("VisualShaderNodeMix_2fi8m")
nodes/fragment/27/position = Vector2(620, -320)
nodes/fragment/29/node = SubResource("VisualShaderNodeCustom_71muk")
nodes/fragment/29/position = Vector2(1940, 240)
nodes/fragment/30/node = SubResource("VisualShaderNodeTexture2DParameter_hls3y")
nodes/fragment/30/position = Vector2(1020, -60)
nodes/fragment/31/node = SubResource("VisualShaderNodeTexture_05fym")
nodes/fragment/31/position = Vector2(-220, 960)
nodes/fragment/32/node = SubResource("VisualShaderNodeTransformVecMult_1hgpd")
nodes/fragment/32/position = Vector2(1780, 520)
nodes/fragment/35/node = SubResource("VisualShaderNodeVectorOp_xm5xr")
nodes/fragment/35/position = Vector2(960, 600)
nodes/fragment/36/node = SubResource("VisualShaderNodeInput_emrpd")
nodes/fragment/36/position = Vector2(640, 660)
nodes/fragment/37/node = SubResource("VisualShaderNodeInput_qipkb")
nodes/fragment/37/position = Vector2(620, 820)
nodes/fragment/38/node = SubResource("VisualShaderNodeVectorOp_5d88u")
nodes/fragment/38/position = Vector2(960, 760)
nodes/fragment/39/node = SubResource("VisualShaderNodeVectorOp_oqqfw")
nodes/fragment/39/position = Vector2(960, 920)
nodes/fragment/40/node = SubResource("VisualShaderNodeInput_7wmn4")
nodes/fragment/40/position = Vector2(620, 980)
nodes/fragment/41/node = SubResource("VisualShaderNodeVectorOp_ngaby")
nodes/fragment/41/position = Vector2(1220.83, 700.968)
nodes/fragment/42/node = SubResource("VisualShaderNodeVectorOp_4y7fj")
nodes/fragment/42/position = Vector2(1420, 760)
nodes/fragment/43/node = SubResource("VisualShaderNodeVectorFunc_fsn8h")
nodes/fragment/43/position = Vector2(1770.29, 847.33)
nodes/fragment/44/node = SubResource("VisualShaderNodeVectorCompose_wfhu3")
nodes/fragment/44/position = Vector2(40, 980)
nodes/fragment/45/node = SubResource("VisualShaderNodeMultiplyAdd_yu2wr")
nodes/fragment/45/position = Vector2(240, 820)
nodes/fragment/46/node = SubResource("VisualShaderNodeVectorDecompose_beyve")
nodes/fragment/46/position = Vector2(420, 780)
nodes/fragment/47/node = SubResource("VisualShaderNodeVectorFunc_735tx")
nodes/fragment/47/position = Vector2(1600, 660)
nodes/fragment/49/node = SubResource("VisualShaderNodeInput_8n3p4")
nodes/fragment/49/position = Vector2(1480, 540)
nodes/fragment/50/node = SubResource("VisualShaderNodeExpression_oustt")
nodes/fragment/50/position = Vector2(940, 1540)
nodes/fragment/50/size = Vector2(1224.39, 1776.58)
nodes/fragment/50/input_ports = "0,8,heightMap;1,3,uvs;2,4,viewWorld;3,4,viewDirTan;4,0,parallax;5,0,refPlane;6,0,currentDialation;7,0,irisSize;8,4,normalWorld;"
nodes/fragment/50/output_ports = "0,3,Out;"
nodes/fragment/50/expression = "int minSamples = 8;
int maxSamples = 16;
vec3 result = vec3(0,0,0);
int stepIndex = 0;
int numSteps = int(mix(float(maxSamples), float(minSamples), dot(normalWorld, viewWorld)));
float layerHeight = 1.0 / float(numSteps);
vec2 plane = parallax * ( viewDirTan.xy / viewDirTan.z );
uvs += refPlane * plane;
vec2 deltaTex = -plane * layerHeight;
vec2 prevTexOffset = vec2(0,0);
float prevRayZ = 1.0f;
float prevHeight = 0.0f;
vec2 currTexOffset = deltaTex;
float currRayZ = 1.0f - layerHeight;
float currHeight = 0.0f;
float intersection = 0.0f;
vec2 finalTexOffset = vec2(0,0);
vec2 dialatedUV = vec2(0,0);
float dialatedCenterDist = 0.0f;
while ( stepIndex < numSteps + 1 ) {
	dialatedUV = uvs + currTexOffset - vec2(0.5,0.5);
	dialatedCenterDist = length(dialatedUV);
	dialatedCenterDist = max(0, currentDialation + dialatedCenterDist * (irisSize - currentDialation) / irisSize);
	dialatedUV = normalize(dialatedUV) * dialatedCenterDist;
	dialatedUV +=  vec2(0.5,0.5);
	currHeight = textureLod(heightMap, dialatedUV,0).r;
	if ( currHeight > currRayZ ) {
		stepIndex = numSteps + 1;
	} else {
		stepIndex++;
		prevTexOffset = currTexOffset;
		prevRayZ = currRayZ;
		prevHeight = currHeight;
		currTexOffset += deltaTex;
		currRayZ -= layerHeight;
	}
}
int sectionSteps = numSteps/2;
int sectionIndex = 0;
float newZ = 0.0f;
float newHeight = 0.0f;
while ( sectionIndex < sectionSteps ) {
	intersection = ( prevHeight - prevRayZ ) / ( prevHeight - currHeight + currRayZ - prevRayZ );
	finalTexOffset = prevTexOffset + intersection * deltaTex;
	dialatedUV = uvs + finalTexOffset - vec2(0.5,0.5);
	dialatedCenterDist = length(dialatedUV);
	dialatedCenterDist = max(0, currentDialation + dialatedCenterDist * (irisSize - currentDialation) / irisSize);
	dialatedUV = normalize(dialatedUV) * dialatedCenterDist;
	dialatedUV +=  vec2(0.5,0.5);
	newZ = prevRayZ - intersection * layerHeight;
	newHeight = textureLod( heightMap, dialatedUV,0).r;
	if ( newHeight > newZ ) {
		currTexOffset = finalTexOffset;
		currHeight = newHeight;
		currRayZ = newZ;
		deltaTex = intersection * deltaTex;
		layerHeight = intersection * layerHeight;
	} else {
		prevTexOffset = finalTexOffset;
		prevHeight = newHeight;
		prevRayZ = newZ;
		deltaTex = ( 1.0 - intersection ) * deltaTex;
		layerHeight = ( 1.0 - intersection ) * layerHeight;
	}
	sectionIndex++;
}
Out = dialatedUV;"
nodes/fragment/51/node = SubResource("VisualShaderNodeTexture2DParameter_pmfbo")
nodes/fragment/51/position = Vector2(-160, 1320)
nodes/fragment/53/node = SubResource("VisualShaderNodeVectorDecompose_s5cij")
nodes/fragment/53/position = Vector2(-880, 2540)
nodes/fragment/55/node = SubResource("VisualShaderNodeVaryingGetter_jfqyh")
nodes/fragment/55/position = Vector2(-980, 2320)
nodes/fragment/56/node = SubResource("VisualShaderNodeVaryingGetter_gbep0")
nodes/fragment/56/position = Vector2(-1100, 2160)
nodes/fragment/57/node = SubResource("VisualShaderNodeVaryingGetter_3esj7")
nodes/fragment/57/position = Vector2(-980, 2000)
nodes/fragment/58/node = SubResource("VisualShaderNodeVectorDecompose_s555r")
nodes/fragment/58/position = Vector2(-740, 2340)
nodes/fragment/59/node = SubResource("VisualShaderNodeVectorDecompose_qxgvn")
nodes/fragment/59/position = Vector2(-680, 2140)
nodes/fragment/60/node = SubResource("VisualShaderNodeVectorDecompose_ejw71")
nodes/fragment/60/position = Vector2(-700, 1980)
nodes/fragment/61/node = SubResource("VisualShaderNodeVectorCompose_51unh")
nodes/fragment/61/position = Vector2(-180, 1980)
nodes/fragment/62/node = SubResource("VisualShaderNodeVectorCompose_outl0")
nodes/fragment/62/position = Vector2(-180, 2140)
nodes/fragment/63/node = SubResource("VisualShaderNodeVectorCompose_s6bkl")
nodes/fragment/63/position = Vector2(-180, 2300)
nodes/fragment/64/node = SubResource("VisualShaderNodeVectorOp_sc0xl")
nodes/fragment/64/position = Vector2(40, 1980)
nodes/fragment/65/node = SubResource("VisualShaderNodeVectorOp_qm24k")
nodes/fragment/65/position = Vector2(40, 2180)
nodes/fragment/66/node = SubResource("VisualShaderNodeVectorOp_3ppnu")
nodes/fragment/66/position = Vector2(40, 2360)
nodes/fragment/67/node = SubResource("VisualShaderNodeVectorOp_5d3bx")
nodes/fragment/67/position = Vector2(220, 2060)
nodes/fragment/68/node = SubResource("VisualShaderNodeVectorOp_isfl8")
nodes/fragment/68/position = Vector2(400, 2100)
nodes/fragment/69/node = SubResource("VisualShaderNodeVectorFunc_lx7jv")
nodes/fragment/69/position = Vector2(580, 2100)
nodes/fragment/70/node = SubResource("VisualShaderNodeFloatParameter_sf0jl")
nodes/fragment/70/position = Vector2(120, 1700)
nodes/fragment/71/node = SubResource("VisualShaderNodeFloatConstant_5phfw")
nodes/fragment/71/position = Vector2(500, 1760)
nodes/fragment/72/node = SubResource("VisualShaderNodeFloatConstant_sytfn")
nodes/fragment/72/position = Vector2(500, 1840)
nodes/fragment/73/node = SubResource("VisualShaderNodeTexture_j6yuc")
nodes/fragment/73/position = Vector2(2340, 1240)
nodes/fragment/74/node = SubResource("VisualShaderNodeTexture2DParameter_8fkmn")
nodes/fragment/74/position = Vector2(1880, 1100)
nodes/fragment/75/node = SubResource("VisualShaderNodeFloatParameter_p3oap")
nodes/fragment/75/position = Vector2(2220, 1520)
nodes/fragment/76/node = SubResource("VisualShaderNodeVectorOp_xgvvw")
nodes/fragment/76/position = Vector2(2680, 1220)
nodes/fragment/77/node = SubResource("VisualShaderNodeMix_5hmix")
nodes/fragment/77/position = Vector2(2965.39, 1444.75)
nodes/fragment/78/node = SubResource("VisualShaderNodeVectorOp_omr4j")
nodes/fragment/78/position = Vector2(3380, -80)
nodes/fragment/79/node = SubResource("VisualShaderNodeMix_ltslt")
nodes/fragment/79/position = Vector2(-1880, 1580)
nodes/fragment/80/node = SubResource("VisualShaderNodeFloatOp_2rlun")
nodes/fragment/80/position = Vector2(-2200, 1460)
nodes/fragment/81/node = SubResource("VisualShaderNodeFloatConstant_bq5uq")
nodes/fragment/81/position = Vector2(-2451.37, 1446.97)
nodes/fragment/82/node = SubResource("VisualShaderNodeFloatOp_6myhn")
nodes/fragment/82/position = Vector2(-2440, 1560)
nodes/fragment/83/node = SubResource("VisualShaderNodeFloatConstant_i2tfa")
nodes/fragment/83/position = Vector2(-2740, 1920)
nodes/fragment/84/node = SubResource("VisualShaderNodeRemap_ywnyf")
nodes/fragment/84/position = Vector2(-2840, 1580)
nodes/fragment/85/node = SubResource("VisualShaderNodeCustom_6vj5v")
nodes/fragment/85/position = Vector2(-3100, 1600)
nodes/fragment/86/node = SubResource("VisualShaderNodeInput_wsvsd")
nodes/fragment/86/position = Vector2(-3780, 1480)
nodes/fragment/87/node = SubResource("VisualShaderNodeFloatParameter_spes8")
nodes/fragment/87/position = Vector2(-3900, 1680)
nodes/fragment/88/node = SubResource("VisualShaderNodeFloatOp_wvpk4")
nodes/fragment/88/position = Vector2(-3600, 1620)
nodes/fragment/89/node = SubResource("VisualShaderNodeFloatOp_gqp73")
nodes/fragment/89/position = Vector2(-3360, 1580)
nodes/fragment/91/node = SubResource("VisualShaderNodeSmoothStep_6ctde")
nodes/fragment/91/position = Vector2(-2201.19, 1970.88)
nodes/fragment/92/node = SubResource("VisualShaderNodeVectorDistance_tsy47")
nodes/fragment/92/position = Vector2(-2380, 1840)
nodes/fragment/93/node = SubResource("VisualShaderNodeFloatOp_0p0dg")
nodes/fragment/93/position = Vector2(-2490.86, 2073.73)
nodes/fragment/97/node = SubResource("VisualShaderNodeVectorFunc_dwqio")
nodes/fragment/97/position = Vector2(-1320, 1780)
nodes/fragment/103/node = SubResource("VisualShaderNodeVaryingGetter_cjc0q")
nodes/fragment/103/position = Vector2(-1900, 2260)
nodes/fragment/104/node = SubResource("VisualShaderNodeInput_riidr")
nodes/fragment/104/position = Vector2(-1960, 2180)
nodes/fragment/105/node = SubResource("VisualShaderNodeVectorOp_tpp5d")
nodes/fragment/105/position = Vector2(-1560, 2120)
nodes/fragment/106/node = SubResource("VisualShaderNodeVectorFunc_elq73")
nodes/fragment/106/position = Vector2(-880, 2120)
nodes/fragment/107/node = SubResource("VisualShaderNodeTexture2DParameter_x7cr5")
nodes/fragment/107/position = Vector2(-680, 880)
nodes/fragment/connections = PackedInt32Array(4, 0, 5, 0, 2, 0, 6, 1, 5, 0, 7, 0, 7, 0, 8, 0, 6, 0, 8, 1, 8, 0, 9, 0, 9, 0, 10, 0, 7, 0, 11, 0, 11, 0, 12, 2, 3, 0, 13, 1, 13, 0, 14, 0, 8, 0, 15, 0, 15, 0, 14, 2, 14, 0, 16, 0, 16, 0, 17, 0, 17, 0, 18, 0, 18, 0, 19, 0, 19, 0, 20, 0, 21, 4, 24, 1, 20, 0, 24, 0, 24, 0, 25, 2, 21, 0, 25, 1, 22, 0, 26, 0, 23, 0, 26, 1, 26, 0, 27, 1, 27, 0, 25, 0, 35, 0, 41, 0, 38, 0, 41, 1, 41, 0, 42, 0, 39, 0, 42, 1, 31, 1, 44, 0, 31, 2, 44, 1, 44, 0, 45, 0, 45, 0, 46, 0, 46, 0, 35, 1, 46, 1, 38, 1, 46, 2, 39, 1, 10, 0, 31, 0, 25, 0, 0, 0, 42, 0, 47, 0, 47, 0, 32, 1, 49, 0, 32, 0, 51, 0, 50, 0, 10, 0, 50, 1, 60, 0, 61, 0, 59, 0, 61, 1, 58, 0, 61, 2, 60, 1, 62, 0, 59, 1, 62, 1, 58, 1, 62, 2, 60, 2, 63, 0, 59, 2, 63, 1, 58, 2, 63, 2, 61, 0, 64, 0, 53, 0, 64, 1, 62, 0, 65, 0, 53, 1, 65, 1, 63, 0, 66, 0, 53, 2, 66, 1, 64, 0, 67, 0, 65, 0, 67, 1, 67, 0, 68, 0, 66, 0, 68, 1, 68, 0, 69, 0, 70, 0, 50, 4, 71, 0, 50, 5, 72, 0, 50, 7, 74, 0, 73, 2, 73, 0, 76, 0, 75, 0, 76, 1, 76, 0, 77, 0, 14, 0, 77, 2, 77, 0, 78, 1, 79, 0, 50, 6, 80, 0, 79, 0, 81, 0, 80, 0, 82, 0, 80, 1, 83, 0, 82, 0, 87, 0, 88, 1, 86, 0, 89, 0, 88, 0, 89, 1, 91, 0, 79, 2, 10, 0, 92, 0, 92, 0, 91, 2, 83, 0, 91, 0, 83, 0, 93, 0, 93, 0, 91, 1, 97, 0, 50, 2, 97, 0, 53, 0, 105, 0, 97, 0, 78, 0, 0, 5, 104, 0, 105, 0, 103, 0, 105, 1, 37, 0, 38, 0, 36, 0, 35, 0, 40, 0, 39, 0, 55, 0, 50, 8, 57, 0, 60, 0, 55, 0, 58, 0, 56, 0, 106, 0, 106, 0, 59, 0, 84, 0, 82, 1, 14, 0, 27, 2, 12, 0, 26, 2, 107, 0, 31, 2, 69, 0, 50, 3, 50, 0, 73, 0)
